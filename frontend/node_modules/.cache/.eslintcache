[{"/home/snow/programming/blog-mc/frontend/src/index.js":"1","/home/snow/programming/blog-mc/frontend/src/App.js":"2","/home/snow/programming/blog-mc/frontend/src/reportWebVitals.js":"3","/home/snow/programming/blog-mc/frontend/src/store.js":"4","/home/snow/programming/blog-mc/frontend/src/components/RoutesTree.js":"5","/home/snow/programming/blog-mc/frontend/src/components/blog/blogSlice.js":"6","/home/snow/programming/blog-mc/frontend/src/components/Layout.js":"7","/home/snow/programming/blog-mc/frontend/src/components/blog/BlogPosts.js":"8","/home/snow/programming/blog-mc/frontend/src/components/blog/SinglePost.js":"9","/home/snow/programming/blog-mc/frontend/src/Post.js":"10","/home/snow/programming/blog-mc/frontend/src/components/blog/PinnedPost.js":"11","/home/snow/programming/blog-mc/frontend/src/components/post/Post.js":"12","/home/snow/programming/blog-mc/frontend/src/components/post/postSlice.js":"13"},{"size":498,"mtime":1658184911467,"results":"14","hashOfConfig":"15"},{"size":14924,"mtime":1658184670290,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1658079893000,"results":"17","hashOfConfig":"15"},{"size":289,"mtime":1658168781659,"results":"18","hashOfConfig":"15"},{"size":899,"mtime":1658186438695,"results":"19","hashOfConfig":"15"},{"size":1005,"mtime":1658168882549,"results":"20","hashOfConfig":"15"},{"size":5563,"mtime":1658270152008,"results":"21","hashOfConfig":"15"},{"size":2275,"mtime":1658271435276,"results":"22","hashOfConfig":"15"},{"size":1294,"mtime":1658269499565,"results":"23","hashOfConfig":"15"},{"size":2547,"mtime":1658100588784,"results":"24","hashOfConfig":"15"},{"size":1816,"mtime":1658269459857,"results":"25","hashOfConfig":"15"},{"size":2244,"mtime":1658269125316,"results":"26","hashOfConfig":"15"},{"size":902,"mtime":1658170488712,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"13kr753",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"32"},"/home/snow/programming/blog-mc/frontend/src/index.js",["73"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport store from './store.js'\n\nimport RoutesTree from './components/RoutesTree'\nimport App from './App'\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <RoutesTree/>\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n",[],"/home/snow/programming/blog-mc/frontend/src/App.js",["74","75","76","77","78","79","80","81","82","83","84"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Popover, Transition } from '@headlessui/react'\nimport {\n  BookmarkAltIcon,\n  CalendarIcon,\n  ChartBarIcon,\n  CursorClickIcon,\n  MenuIcon,\n  PhoneIcon,\n  PlayIcon,\n  RefreshIcon,\n  ShieldCheckIcon,\n  SupportIcon,\n  ViewGridIcon,\n  XIcon,\n} from '@heroicons/react/outline'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\n\nconst solutions = [\n  {\n    name: 'Analytics',\n    description: 'Get a better understanding of where your traffic is coming from.',\n    href: '#',\n    icon: ChartBarIcon,\n  },\n  {\n    name: 'Engagement',\n    description: 'Speak directly to your customers in a more meaningful way.',\n    href: '#',\n    icon: CursorClickIcon,\n  },\n  { name: 'Security', description: \"Your customers' data will be safe and secure.\", href: '#', icon: ShieldCheckIcon },\n  {\n    name: 'Integrations',\n    description: \"Connect with third-party tools that you're already using.\",\n    href: '#',\n    icon: ViewGridIcon,\n  },\n  {\n    name: 'Automations',\n    description: 'Build strategic funnels that will drive your customers to convert',\n    href: '#',\n    icon: RefreshIcon,\n  },\n]\nconst callsToAction = [\n  { name: 'Watch Demo', href: '#', icon: PlayIcon },\n  { name: 'Contact Sales', href: '#', icon: PhoneIcon },\n]\nconst resources = [\n  {\n    name: 'Help Center',\n    description: 'Get all of your questions answered in our forums or contact support.',\n    href: '#',\n    icon: SupportIcon,\n  },\n  {\n    name: 'Guides',\n    description: 'Learn how to maximize our platform to get the most out of it.',\n    href: '#',\n    icon: BookmarkAltIcon,\n  },\n  {\n    name: 'Events',\n    description: 'See what meet-ups and other events we might be planning near you.',\n    href: '#',\n    icon: CalendarIcon,\n  },\n  { name: 'Security', description: 'Understand how we take your privacy seriously.', href: '#', icon: ShieldCheckIcon },\n]\nconst recentPosts = [\n  { id: 1, name: 'Boost your conversion rate', href: '#' },\n  { id: 2, name: 'How to use search engine optimization to drive traffic to your site', href: '#' },\n  { id: 3, name: 'Improve your customer experience', href: '#' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Example() {\n  return (\n    <Popover className=\"relative bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n          <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n            <a href=\"#\">\n              <span className=\"sr-only\">Workflow</span>\n              <img\n                className=\"h-8 w-auto sm:h-10\"\n                src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                alt=\"\"\n              />\n            </a>\n          </div>\n          <div className=\"-mr-2 -my-2 md:hidden\">\n            <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n              <span className=\"sr-only\">Open menu</span>\n              <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </Popover.Button>\n          </div>\n          <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNames(\n                      open ? 'text-gray-900' : 'text-gray-500',\n                      'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                    )}\n                  >\n                    <span>Solutions</span>\n                    <ChevronDownIcon\n                      className={classNames(\n                        open ? 'text-gray-600' : 'text-gray-400',\n                        'ml-2 h-5 w-5 group-hover:text-gray-500'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                      <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {solutions.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                            >\n                              <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                        <div className=\"px-5 py-5 bg-gray-50 space-y-6 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8\">\n                          {callsToAction.map((item) => (\n                            <div key={item.name} className=\"flow-root\">\n                              <a\n                                href={item.href}\n                                className=\"-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100\"\n                              >\n                                <item.icon className=\"flex-shrink-0 h-6 w-6 text-gray-400\" aria-hidden=\"true\" />\n                                <span className=\"ml-3\">{item.name}</span>\n                              </a>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n\n            <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n              Pricing\n            </a>\n            <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n              Docs\n            </a>\n\n            <Popover className=\"relative\">\n              {({ open }) => (\n                <>\n                  <Popover.Button\n                    className={classNames(\n                      open ? 'text-gray-900' : 'text-gray-500',\n                      'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                    )}\n                  >\n                    <span>More</span>\n                    <ChevronDownIcon\n                      className={classNames(\n                        open ? 'text-gray-600' : 'text-gray-400',\n                        'ml-2 h-5 w-5 group-hover:text-gray-500'\n                      )}\n                      aria-hidden=\"true\"\n                    />\n                  </Popover.Button>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel className=\"absolute z-10 left-1/2 transform -translate-x-1/2 mt-3 px-2 w-screen max-w-md sm:px-0\">\n                      <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                        <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                          {resources.map((item) => (\n                            <a\n                              key={item.name}\n                              href={item.href}\n                              className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                            >\n                              <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{item.name}</p>\n                                <p className=\"mt-1 text-sm text-gray-500\">{item.description}</p>\n                              </div>\n                            </a>\n                          ))}\n                        </div>\n                        <div className=\"px-5 py-5 bg-gray-50 sm:px-8 sm:py-8\">\n                          <div>\n                            <h3 className=\"text-sm tracking-wide font-medium text-gray-500 uppercase\">Recent Posts</h3>\n                            <ul role=\"list\" className=\"mt-4 space-y-4\">\n                              {recentPosts.map((post) => (\n                                <li key={post.id} className=\"text-base truncate\">\n                                  <a href={post.href} className=\"font-medium text-gray-900 hover:text-gray-700\">\n                                    {post.name}\n                                  </a>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                          <div className=\"mt-5 text-sm\">\n                            <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                              {' '}\n                              View all posts <span aria-hidden=\"true\">&rarr;</span>\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </Popover.Group>\n          <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n            <a href=\"#\" className=\"whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900\">\n              Sign in\n            </a>\n            <a\n              href=\"#\"\n              className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n            >\n              Sign up\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"duration-200 ease-out\"\n        enterFrom=\"opacity-0 scale-95\"\n        enterTo=\"opacity-100 scale-100\"\n        leave=\"duration-100 ease-in\"\n        leaveFrom=\"opacity-100 scale-100\"\n        leaveTo=\"opacity-0 scale-95\"\n      >\n        <Popover.Panel focus className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n          <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n            <div className=\"pt-5 pb-6 px-5\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <img\n                    className=\"h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"-mr-2\">\n                  <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </Popover.Button>\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <nav className=\"grid gap-y-8\">\n                  {solutions.map((item) => (\n                    <a\n                      key={item.name}\n                      href={item.href}\n                      className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                    >\n                      <item.icon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">{item.name}</span>\n                    </a>\n                  ))}\n                </nav>\n              </div>\n            </div>\n            <div className=\"py-6 px-5 space-y-6\">\n              <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                <a href=\"#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Pricing\n                </a>\n\n                <a href=\"#\" className=\"text-base font-medium text-gray-900 hover:text-gray-700\">\n                  Docs\n                </a>\n                {resources.map((item) => (\n                  <a\n                    key={item.name}\n                    href={item.href}\n                    className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                  >\n                    {item.name}\n                  </a>\n                ))}\n              </div>\n              <div>\n                <a\n                  href=\"#\"\n                  className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                >\n                  Sign up\n                </a>\n                <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                  Existing customer?{' '}\n                  <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-500\">\n                    Sign in\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </Popover.Panel>\n      </Transition>\n    </Popover>\n  )\n}\n","/home/snow/programming/blog-mc/frontend/src/reportWebVitals.js",[],[],"/home/snow/programming/blog-mc/frontend/src/store.js",[],[],"/home/snow/programming/blog-mc/frontend/src/components/RoutesTree.js",[],[],"/home/snow/programming/blog-mc/frontend/src/components/blog/blogSlice.js",[],[],"/home/snow/programming/blog-mc/frontend/src/components/Layout.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98"],[],"/home/snow/programming/blog-mc/frontend/src/components/blog/BlogPosts.js",[],[],"/home/snow/programming/blog-mc/frontend/src/components/blog/SinglePost.js",["99","100"],[],"/home/snow/programming/blog-mc/frontend/src/Post.js",["101","102","103","104","105","106","107","108","109"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { AiFillPushpin } from 'react-icons/ai'\n\nimport logo from './logo.svg'\n\nexport default function Example() {\n  return (\n    <>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 mb-7\">\n        <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n          <div className=\"flex justify-start items-center\">\n            <a href=\"#\">\n              <span className=\"sr-only\">Workflow</span>\n              <img\n                className=\"h-8 w-auto sm:h-10\"\n                src={logo}\n                alt=\"\"\n              />\n            </a>\n            <p className=\"ml-3 font-bold leading-5\" >Mohamed<br />Chamrouk.</p>\n          </div>\n          <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n            Accueil\n          </a>\n          <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n            Projets\n          </a>\n          <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n            Portofolio\n          </a>\n          <a href=\"#\" className=\"text-base font-medium text-gray-500 hover:text-gray-900\">\n            A propos de moi\n          </a>\n          <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n            <a href=\"#\" className=\"flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-lg text-cyan-500 bg-cyan-100 hover:bg-cyan-200 focus:ring focus:ring-cyan-50\">\n              S'identifier\n            </a>\n          </div>\n        </div>\n\n        {/* Pinned post */}\n        <div className=\"mb-7 pb-[100px]\">\n          <div className=\"flex justify-center\">\n            <div className=\"mt-3 mb-3 flex flex-col\">\n              <a className=\"font-bold text-3xl pb-2 pt-7\" href=\"#\">Création de mon nouveau blog !</a>\n              <p className=\"font-normal text-sm pb-6\"><span className=\"font-medium\">DEVELOPEMENT</span> &#8226; 14 juil. 2022</p>\n              <img className=\"rounded-lg flex w-full bg-auto justify-start mr-7 pb-7\" />\n              <p className=\"font-normal text-gray-700 text-lg pb-3\">Bienvenue sur mon tout nouveau blog. Ce nouveau site web fait suite à mon ancien site web statique et apporte une nouvelle stack complète sous JavaScript.</p>\n              <p className=\"font-medium flex justify-end flex-1 items-end text-sm\">Mohamed Chamrouk</p>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </>\n  )\n}\n",[],"/home/snow/programming/blog-mc/frontend/src/components/blog/PinnedPost.js",["110","111","112"],[],"/home/snow/programming/blog-mc/frontend/src/components/post/Post.js",["113","114","115","116"],[],"/home/snow/programming/blog-mc/frontend/src/components/post/postSlice.js",["117"],[],"import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from '@reduxjs/toolkit';\n\nexport const fetchUniquePost = createAsyncThunk('/post/fetchUniquePost', async(id) => {\n    let output;\n    await fetch(`http://127.0.0.1:4000/db/getUniquePost?id=${id}`).then(res => res.json()).then((data) => {\n        output = data[0]\n    })\n    return [{'id': output._id, ...output}]\n})\n\nconst postAdapter = createEntityAdapter()\nconst initialState = postAdapter.getInitialState({})\n\nconst postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers : {\n    }, extraReducers: (builder) => {\n        builder\n            .addCase(fetchUniquePost.fulfilled, (state, action) => {\n                postAdapter.setAll(state, action.payload)\n            })\n    }\n})\n\nexport default postSlice.reducer\n\nexport const { selectAll: selectPosts } = postAdapter.getSelectors(state => state.post)",{"ruleId":"118","severity":1,"message":"119","line":8,"column":8,"nodeType":"120","messageId":"121","endLine":8,"endColumn":11},{"ruleId":"122","severity":1,"message":"123","line":88,"column":13,"nodeType":"124","endLine":88,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":169,"column":13,"nodeType":"124","endLine":169,"endColumn":93},{"ruleId":"122","severity":1,"message":"123","line":172,"column":13,"nodeType":"124","endLine":172,"endColumn":93},{"ruleId":"125","severity":1,"message":"126","line":224,"column":29,"nodeType":"124","endLine":224,"endColumn":72},{"ruleId":"122","severity":1,"message":"123","line":235,"column":29,"nodeType":"124","endLine":235,"endColumn":103},{"ruleId":"122","severity":1,"message":"123","line":249,"column":13,"nodeType":"124","endLine":249,"endColumn":111},{"ruleId":"122","severity":1,"message":"123","line":252,"column":13,"nodeType":"124","endLine":255,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":306,"column":17,"nodeType":"124","endLine":306,"endColumn":97},{"ruleId":"122","severity":1,"message":"123","line":310,"column":17,"nodeType":"124","endLine":310,"endColumn":97},{"ruleId":"122","severity":1,"message":"123","line":324,"column":17,"nodeType":"124","endLine":327,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":332,"column":19,"nodeType":"124","endLine":332,"endColumn":81},{"ruleId":"118","severity":1,"message":"127","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":16},{"ruleId":"118","severity":1,"message":"128","line":7,"column":3,"nodeType":"120","messageId":"121","endLine":7,"endColumn":18},{"ruleId":"118","severity":1,"message":"129","line":9,"column":3,"nodeType":"120","messageId":"121","endLine":9,"endColumn":15},{"ruleId":"118","severity":1,"message":"130","line":10,"column":3,"nodeType":"120","messageId":"121","endLine":10,"endColumn":15},{"ruleId":"118","severity":1,"message":"131","line":11,"column":3,"nodeType":"120","messageId":"121","endLine":11,"endColumn":18},{"ruleId":"118","severity":1,"message":"132","line":14,"column":3,"nodeType":"120","messageId":"121","endLine":14,"endColumn":12},{"ruleId":"118","severity":1,"message":"133","line":16,"column":3,"nodeType":"120","messageId":"121","endLine":16,"endColumn":11},{"ruleId":"118","severity":1,"message":"134","line":18,"column":3,"nodeType":"120","messageId":"121","endLine":18,"endColumn":14},{"ruleId":"118","severity":1,"message":"135","line":19,"column":3,"nodeType":"120","messageId":"121","endLine":19,"endColumn":18},{"ruleId":"118","severity":1,"message":"136","line":20,"column":3,"nodeType":"120","messageId":"121","endLine":20,"endColumn":14},{"ruleId":"118","severity":1,"message":"137","line":21,"column":3,"nodeType":"120","messageId":"121","endLine":21,"endColumn":15},{"ruleId":"118","severity":1,"message":"138","line":24,"column":10,"nodeType":"120","messageId":"121","endLine":24,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":80,"column":15,"nodeType":"124","endLine":80,"endColumn":215},{"ruleId":"122","severity":1,"message":"123","line":134,"column":19,"nodeType":"124","endLine":134,"endColumn":227},{"ruleId":"139","severity":1,"message":"140","line":8,"column":76,"nodeType":"120","messageId":"141","endLine":8,"endColumn":85,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":19,"column":49,"nodeType":"124","endLine":19,"endColumn":130},{"ruleId":"118","severity":1,"message":"145","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":12,"column":13,"nodeType":"124","endLine":12,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":22,"column":11,"nodeType":"124","endLine":22,"endColumn":91},{"ruleId":"122","severity":1,"message":"123","line":25,"column":11,"nodeType":"124","endLine":25,"endColumn":91},{"ruleId":"122","severity":1,"message":"123","line":28,"column":11,"nodeType":"124","endLine":28,"endColumn":91},{"ruleId":"122","severity":1,"message":"123","line":31,"column":11,"nodeType":"124","endLine":31,"endColumn":91},{"ruleId":"122","severity":1,"message":"123","line":35,"column":13,"nodeType":"124","endLine":35,"endColumn":213},{"ruleId":"122","severity":1,"message":"123","line":45,"column":15,"nodeType":"124","endLine":45,"endColumn":68},{"ruleId":"143","severity":1,"message":"144","line":47,"column":15,"nodeType":"124","endLine":47,"endColumn":89},{"ruleId":"139","severity":1,"message":"140","line":11,"column":76,"nodeType":"120","messageId":"141","endLine":11,"endColumn":85,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"144","line":20,"column":49,"nodeType":"124","endLine":20,"endColumn":142},{"ruleId":"143","severity":1,"message":"144","line":20,"column":147,"nodeType":"124","endLine":20,"endColumn":243},{"ruleId":"118","severity":1,"message":"147","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":17,"column":8,"nodeType":"150","endLine":17,"endColumn":10,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"140","line":28,"column":80,"nodeType":"120","messageId":"141","endLine":28,"endColumn":89,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"144","line":35,"column":49,"nodeType":"124","endLine":35,"endColumn":135},{"ruleId":"118","severity":1,"message":"153","line":1,"column":62,"nodeType":"120","messageId":"121","endLine":1,"endColumn":76},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","'Outlet' is defined but never used.","'BookmarkAltIcon' is defined but never used.","'CalendarIcon' is defined but never used.","'ChartBarIcon' is defined but never used.","'CursorClickIcon' is defined but never used.","'PhoneIcon' is defined but never used.","'PlayIcon' is defined but never used.","'RefreshIcon' is defined but never used.","'ShieldCheckIcon' is defined but never used.","'SupportIcon' is defined but never used.","'ViewGridIcon' is defined but never used.","'ChevronDownIcon' is defined but never used.","valid-typeof","Invalid typeof comparison value.","invalidValue",["154"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'AiFillPushpin' is defined but never used.",["155"],"'IoReturnDownBackOutline' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["156"],["157"],"'createSelector' is defined but never used.",{"messageId":"158","data":"159","fix":"160","desc":"161"},{"messageId":"158","data":"162","fix":"163","desc":"161"},{"desc":"164","fix":"165"},{"messageId":"158","data":"166","fix":"167","desc":"161"},"suggestString",{"type":"168"},{"range":"169","text":"170"},"Use `\"undefined\"` instead of `undefined`.",{"type":"168"},{"range":"171","text":"170"},"Update the dependencies array to be: [id]",{"range":"172","text":"173"},{"type":"168"},{"range":"174","text":"170"},"undefined",[237,246],"\"undefined\"",[350,359],[488,490],"[id]",[992,1001]]