{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from '@reduxjs/toolkit';\nexport const fetchPosts = createAsyncThunk('/blog/fetchPosts', async () => {\n  let output;\n  await fetch('http://127.0.0.1:4000/db/getPosts').then(res => res.json()).then(data => {\n    output = data;\n  });\n  return output;\n});\nconst blogAdapter = createEntityAdapter();\nconst initialState = blogAdapter.getInitialState({});\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.fulfilled, (state, action) => {\n      blogAdapter.setMany(state, action.payload);\n    });\n  }\n});\nexport default blogSlice.reducer;\nexport const selectIds = createSelector(selectAll, data => {\n  return data.map(post => post._id);\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","createSelector","fetchPosts","output","fetch","then","res","json","data","blogAdapter","initialState","getInitialState","blogSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","setMany","payload","reducer","selectIds","selectAll","map","post","_id"],"sources":["/home/snow/programming/blog-mc/frontend/src/components/blog/blogSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from '@reduxjs/toolkit';\n\nexport const fetchPosts = createAsyncThunk('/blog/fetchPosts', async() => {\n    let output;\n    await fetch('http://127.0.0.1:4000/db/getPosts').then(res => res.json()).then((data) => {\n        output = data\n    })\n    return output\n})\n\nconst blogAdapter = createEntityAdapter()\nconst initialState = blogAdapter.getInitialState({})\n\nconst blogSlice = createSlice({\n    name: 'blog',\n    initialState,\n    reducers : {\n    }, extraReducers: (builder) => {\n        builder\n            .addCase(fetchPosts.fulfilled, (state, action) => {\n                blogAdapter.setMany(state, action.payload)\n            })\n    }\n})\n\nexport default blogSlice.reducer\n\n\nexport const selectIds = createSelector(selectAll, (data) => {\n    return data.map((post) => post._id)\n})"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,EAA6DC,cAA7D,QAAmF,kBAAnF;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,YAAW;EACtE,IAAII,MAAJ;EACA,MAAMC,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAgDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvD,EAAmEF,IAAnE,CAAyEG,IAAD,IAAU;IACpFL,MAAM,GAAGK,IAAT;EACH,CAFK,CAAN;EAGA,OAAOL,MAAP;AACH,CANyC,CAAnC;AAQP,MAAMM,WAAW,GAAGT,mBAAmB,EAAvC;AACA,MAAMU,YAAY,GAAGD,WAAW,CAACE,eAAZ,CAA4B,EAA5B,CAArB;AAEA,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC1Be,IAAI,EAAE,MADoB;EAE1BH,YAF0B;EAG1BI,QAAQ,EAAG,EAHe;EAIvBC,aAAa,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CACFC,OADL,CACaf,UAAU,CAACgB,SADxB,EACmC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9CX,WAAW,CAACY,OAAZ,CAAoBF,KAApB,EAA2BC,MAAM,CAACE,OAAlC;IACH,CAHL;EAIH;AATyB,CAAD,CAA7B;AAYA,eAAeV,SAAS,CAACW,OAAzB;AAGA,OAAO,MAAMC,SAAS,GAAGvB,cAAc,CAACwB,SAAD,EAAajB,IAAD,IAAU;EACzD,OAAOA,IAAI,CAACkB,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,GAAxB,CAAP;AACH,CAFsC,CAAhC"},"metadata":{},"sourceType":"module"}