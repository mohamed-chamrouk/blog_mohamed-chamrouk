{"ast":null,"code":"import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from '@reduxjs/toolkit';\nexport const fetchPosts = createAsyncThunk('/blog/fetchPosts', async () => {\n  let output;\n  await fetch('http://127.0.0.1:4000/db/getPosts').then(res => res.json()).then(data => {\n    output = data;\n  });\n  return {\n    'id': output.map(item => item._id),\n    'entities': output\n  };\n});\nexport const fetchUniquePost = createAsyncThunk('/blog/fetchUniquePost', async id => {\n  let output;\n  await fetch(`http://127.0.0.1:4000/db/getUniquePost?id=${id}`).then(res => res.json()).then(data => {\n    output = data;\n  });\n  return {\n    'id': output._id,\n    'entities': output\n  };\n});\nconst blogAdapter = createEntityAdapter();\nconst initialState = blogAdapter.getInitialState({});\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.fulfilled, (state, action) => {\n      blogAdapter.setMany(state, action.payload);\n    });\n  }\n});\nexport default blogSlice.reducer;\nexport const {\n  selectAll: selectPosts\n} = blogAdapter.getSelectors(state => state.blog);\nexport const selectUniquePost = createSelector(selectPosts, (data, id) => {\n  return data.entities.filter(item => item._id === id);\n});\nexport const selectIds = createSelector(selectPosts, data => {\n  return data.map(post => post._id);\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","createSelector","fetchPosts","output","fetch","then","res","json","data","map","item","_id","fetchUniquePost","id","blogAdapter","initialState","getInitialState","blogSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","setMany","payload","reducer","selectAll","selectPosts","getSelectors","blog","selectUniquePost","entities","filter","selectIds","post"],"sources":["/home/snow/programming/blog-mc/frontend/src/components/blog/blogSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from '@reduxjs/toolkit';\n\nexport const fetchPosts = createAsyncThunk('/blog/fetchPosts', async() => {\n    let output;\n    await fetch('http://127.0.0.1:4000/db/getPosts').then(res => res.json()).then((data) => {\n        output = data\n    })\n    return {'id': output.map((item) => item._id), 'entities': output}\n})\n\nexport const fetchUniquePost = createAsyncThunk('/blog/fetchUniquePost', async(id) => {\n    let output;\n    await fetch(`http://127.0.0.1:4000/db/getUniquePost?id=${id}`).then(res => res.json()).then((data) => {\n        output = data\n    })\n    return {'id': output._id, 'entities': output}\n})\n\nconst blogAdapter = createEntityAdapter()\nconst initialState = blogAdapter.getInitialState({})\n\nconst blogSlice = createSlice({\n    name: 'blog',\n    initialState,\n    reducers : {\n    }, extraReducers: (builder) => {\n        builder\n            .addCase(fetchPosts.fulfilled, (state, action) => {\n                blogAdapter.setMany(state, action.payload)\n            })\n    }\n})\n\nexport default blogSlice.reducer\n\nexport const { selectAll: selectPosts } = blogAdapter.getSelectors((state) => state.blog)\n\nexport const selectUniquePost = createSelector(selectPosts, (data, id) => {\n    return data.entities.filter((item) => item._id === id)\n})\n\nexport const selectIds = createSelector(selectPosts, (data) => {\n    return data.map((post) => post._id)\n})"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,mBAAxC,EAA6DC,cAA7D,QAAmF,kBAAnF;AAEA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAD,EAAqB,YAAW;EACtE,IAAII,MAAJ;EACA,MAAMC,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAgDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvD,EAAmEF,IAAnE,CAAyEG,IAAD,IAAU;IACpFL,MAAM,GAAGK,IAAT;EACH,CAFK,CAAN;EAGA,OAAO;IAAC,MAAML,MAAM,CAACM,GAAP,CAAYC,IAAD,IAAUA,IAAI,CAACC,GAA1B,CAAP;IAAuC,YAAYR;EAAnD,CAAP;AACH,CANyC,CAAnC;AAQP,OAAO,MAAMS,eAAe,GAAGb,gBAAgB,CAAC,uBAAD,EAA0B,MAAMc,EAAN,IAAa;EAClF,IAAIV,MAAJ;EACA,MAAMC,KAAK,CAAE,6CAA4CS,EAAG,EAAjD,CAAL,CAAyDR,IAAzD,CAA8DC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAArE,EAAiFF,IAAjF,CAAuFG,IAAD,IAAU;IAClGL,MAAM,GAAGK,IAAT;EACH,CAFK,CAAN;EAGA,OAAO;IAAC,MAAML,MAAM,CAACQ,GAAd;IAAmB,YAAYR;EAA/B,CAAP;AACH,CAN8C,CAAxC;AAQP,MAAMW,WAAW,GAAGd,mBAAmB,EAAvC;AACA,MAAMe,YAAY,GAAGD,WAAW,CAACE,eAAZ,CAA4B,EAA5B,CAArB;AAEA,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC1BoB,IAAI,EAAE,MADoB;EAE1BH,YAF0B;EAG1BI,QAAQ,EAAG,EAHe;EAIvBC,aAAa,EAAGC,OAAD,IAAa;IAC3BA,OAAO,CACFC,OADL,CACapB,UAAU,CAACqB,SADxB,EACmC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9CX,WAAW,CAACY,OAAZ,CAAoBF,KAApB,EAA2BC,MAAM,CAACE,OAAlC;IACH,CAHL;EAIH;AATyB,CAAD,CAA7B;AAYA,eAAeV,SAAS,CAACW,OAAzB;AAEA,OAAO,MAAM;EAAEC,SAAS,EAAEC;AAAb,IAA6BhB,WAAW,CAACiB,YAAZ,CAA0BP,KAAD,IAAWA,KAAK,CAACQ,IAA1C,CAAnC;AAEP,OAAO,MAAMC,gBAAgB,GAAGhC,cAAc,CAAC6B,WAAD,EAAc,CAACtB,IAAD,EAAOK,EAAP,KAAc;EACtE,OAAOL,IAAI,CAAC0B,QAAL,CAAcC,MAAd,CAAsBzB,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaE,EAA5C,CAAP;AACH,CAF6C,CAAvC;AAIP,OAAO,MAAMuB,SAAS,GAAGnC,cAAc,CAAC6B,WAAD,EAAetB,IAAD,IAAU;EAC3D,OAAOA,IAAI,CAACC,GAAL,CAAU4B,IAAD,IAAUA,IAAI,CAAC1B,GAAxB,CAAP;AACH,CAFsC,CAAhC"},"metadata":{},"sourceType":"module"}